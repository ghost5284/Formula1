{
	"name": "pip_ingest_api_data_to_adls",
	"properties": {
		"activities": [
			{
				"name": "act_copy_seasons_data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup_all_metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "season_source",
						"type": "DatasetReference",
						"parameters": {
							"base_url": "http://ergast.com/api/f1/",
							"rel_url": "seasons.json"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "sink_seasons",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "act_lookup_seasons_data",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "act_copy_seasons_data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "lookup_seasons",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "act_for_each",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "act_lookup_seasons_data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('act_lookup_seasons_data').output.value[0].MRData.SeasonTable.Seasons",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "act_copy_race_data",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET"
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "source_races",
									"type": "DatasetReference",
									"parameters": {
										"base_url": "http://ergast.com/api/f1/",
										"rel_url": {
											"value": "@concat(item().season,'.json')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "sink_races",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "act_lookup_races",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "act_for_each",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "lookup_races",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "act_lookup_races",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('act_lookup_races').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Execute Pipeline1",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "child_pipline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"race_lst": {
										"value": "@item().MRData.RaceTable.Races",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "set_ingest_time",
					"value": {
						"value": "@utcNow('yyyyMMdd HH:mm:ss')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Lookup_all_metadata",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "INSERT INTO public.formula1 (job_id, job_name, task_name, status, start_time)\nVALUES (\n    '@{variables('set_ingest_time')}',\n    'formulafactory12',\n    'session_api',\n    'in_progress',\n    '@{variables('set_ingest_time')}'\n);\n\nINSERT INTO public.formula1 (job_id, job_name, task_name, status, start_time)\nVALUES (\n    '@{variables('set_ingest_time')}',\n    'formulafactory12',\n    'races_api',\n    'in_progress',\n    '@{variables('set_ingest_time')}'\n);\nINSERT INTO public.formula1 (job_id, job_name, task_name, status, start_time)\nVALUES (\n    '@{variables('set_ingest_time')}',\n    'formulafactory12',\n    'result_api',\n    'in_progress',\n    '@{variables('set_ingest_time')}'\n);\n\nSELECT job_id FROM public.formula1;\n",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzurePostgreSqlTable1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Lookup_update_session",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_copy_seasons_data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "UPDATE public.formula1\nSET status='sucess',end_time='@{utcNow('yyyyMMdd HH:mm:ss')}'\nwhere job_id ='@{variables('set_ingest_time')}' and task_name = 'session_api';\n\n\nSELECT job_id FROM public.formula1;\n",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzurePostgreSqlTable1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Lookup_update_races_time",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_for_each",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "UPDATE public.formula1\nSET status='sucess',end_time='@{utcNow('yyyyMMdd HH:mm:ss')}'\nwhere job_id ='@{variables('set_ingest_time')}' and task_name = 'races_api';\n\n\nSELECT job_id FROM public.formula1;\n",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzurePostgreSqlTable1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"variables": {
			"set_seasons": {
				"type": "String"
			},
			"set_rounds": {
				"type": "String"
			},
			"set_round": {
				"type": "String"
			},
			"set_ingest_time": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-04-24T07:23:07Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}